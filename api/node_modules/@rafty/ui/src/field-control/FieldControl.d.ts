import { type HTMLAttributes } from "react";
import type { ValueOrFunction } from "../types";
import { type FieldControlContext } from "./context";
export declare const fieldControlClasses: (props?: ({
    orientation?: "col" | "row" | "row-reverse" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export type FieldControl = HTMLAttributes<HTMLDivElement> & Partial<Pick<FieldControlContext, "orientation">> & Pick<FieldControlContext, "name"> & {
    isRequired?: ValueOrFunction;
    isDisabled?: ValueOrFunction;
    isReadOnly?: ValueOrFunction;
    isInvalid?: ValueOrFunction;
    isLoading?: ValueOrFunction;
};
export declare const FieldControl: import("react").ForwardRefExoticComponent<HTMLAttributes<HTMLDivElement> & Partial<Pick<FieldControlContext, "orientation">> & Pick<FieldControlContext, "name"> & {
    isRequired?: ValueOrFunction | undefined;
    isDisabled?: ValueOrFunction | undefined;
    isReadOnly?: ValueOrFunction | undefined;
    isInvalid?: ValueOrFunction | undefined;
    isLoading?: ValueOrFunction | undefined;
} & import("react").RefAttributes<HTMLDivElement>>;
