import { type HTMLAttributes } from "react";
import { type SizeType } from "../utils";
export declare const tagClasses: (props?: ({
    size?: "sm" | "md" | "lg" | null | undefined;
    colorScheme?: "primary" | "secondary" | "error" | "success" | "warning" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export type Tag = HTMLAttributes<HTMLDivElement> & {
    size?: SizeType;
    colorScheme?: "primary" | "secondary" | "error" | "success" | "warning";
};
export declare const Tag: import("react").ForwardRefExoticComponent<HTMLAttributes<HTMLDivElement> & {
    size?: SizeType;
    colorScheme?: "primary" | "secondary" | "error" | "success" | "warning" | undefined;
} & import("react").RefAttributes<HTMLDivElement>>;
