import * as NavigationMenuPrimitive from "@radix-ui/react-navigation-menu";
import { type ComponentProps, type ComponentPropsWithoutRef, type PropsWithChildren } from "react";
import { type SizeType } from "../utils";
import { type NavigationMenuContext } from "./context";
export type NavigationMenu = ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Root> & Partial<NavigationMenuContext>;
export declare const NavigationMenu: import("react").ForwardRefExoticComponent<Omit<NavigationMenuPrimitive.NavigationMenuProps & import("react").RefAttributes<HTMLElement>, "ref"> & Partial<NavigationMenuContext> & import("react").RefAttributes<HTMLDivElement>>;
export type NavigationMenuList = ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.List> & {
    isUnstyled?: boolean;
};
export declare function NavigationMenuList({ children, className, isUnstyled, ...props }: NavigationMenuList): import("react/jsx-runtime").JSX.Element;
export type NavigationMenuItem = ComponentProps<typeof NavigationMenuPrimitive.Item>;
export declare const NavigationMenuItem: import("react").ForwardRefExoticComponent<NavigationMenuPrimitive.NavigationMenuItemProps & import("react").RefAttributes<HTMLLIElement>>;
export type NavigationMenuTrigger = ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Trigger> & {
    isUnstyled?: boolean;
};
export declare const NavigationMenuTrigger: import("react").ForwardRefExoticComponent<Omit<NavigationMenuPrimitive.NavigationMenuTriggerProps & import("react").RefAttributes<HTMLButtonElement>, "ref"> & {
    isUnstyled?: boolean | undefined;
} & import("react").RefAttributes<HTMLButtonElement>>;
export declare const navigationMenuContentClasses: (props?: ({
    size?: "sm" | "md" | "lg" | "full" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export type NavigationMenuContent = ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Content> & {
    size?: SizeType<"full">;
    isUnstyled?: boolean;
};
export declare const NavigationMenuContent: import("react").ForwardRefExoticComponent<Omit<NavigationMenuPrimitive.NavigationMenuContentProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & {
    size?: SizeType<"full"> | undefined;
    isUnstyled?: boolean | undefined;
} & import("react").RefAttributes<HTMLDivElement>>;
export type NavigationMenuLink = ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Link> & {
    isUnstyled?: boolean;
};
export declare function NavigationMenuLink({ children, className, isUnstyled, ...props }: NavigationMenuLink): import("react/jsx-runtime").JSX.Element;
export type NavigationMenuListItem = PropsWithChildren<{
    title: string;
    href: string;
}>;
export declare function NavigationMenuListItem({ title, href, children, }: NavigationMenuListItem): import("react/jsx-runtime").JSX.Element;
export type NavigationMenuIndicator = ComponentPropsWithoutRef<typeof NavigationMenuPrimitive.Indicator> & {
    isUnstyled?: boolean;
};
export declare function NavigationMenuIndicator({ className, isUnstyled, ...props }: NavigationMenuIndicator): import("react/jsx-runtime").JSX.Element;
