/// <reference types="react" />
import { PinInput as ArkPinInput, type PinInputRootProps } from "@ark-ui/react";
import type { ValueOrFunction } from "../types";
import { type SizeType } from "../utils";
export declare const inputClasses: (props?: ({
    size?: "sm" | "md" | "lg" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export declare const pinInputControlClasses: (props?: ({
    size?: "sm" | "md" | "lg" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export type PinInput = PinInputRootProps & {
    length: number;
    size?: SizeType;
    isDisabled?: ValueOrFunction;
    isLoading?: ValueOrFunction;
    isInvalid?: ValueOrFunction;
};
export declare const PinInput: import("react").ForwardRefExoticComponent<ArkPinInput.RootProps & {
    length: number;
    size?: SizeType;
    isDisabled?: ValueOrFunction | undefined;
    isLoading?: ValueOrFunction | undefined;
    isInvalid?: ValueOrFunction | undefined;
} & import("react").RefAttributes<HTMLDivElement>>;
