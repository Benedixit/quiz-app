import { type ComponentPropsWithoutRef, type HTMLAttributes } from "react";
import { VariableSizeList, type VariableSizeListProps } from "react-window";
import InfiniteLoader from "react-window-infinite-loader";
import { type ScrollAreaContext } from "./context";
type ScrollAreaOptionalProp = "layout";
export type ScrollArea = HTMLAttributes<HTMLDivElement> & Partial<Pick<ScrollAreaContext, ScrollAreaOptionalProp>> & Omit<ScrollAreaContext, ScrollAreaOptionalProp>;
export declare const ScrollArea: import("react").ForwardRefExoticComponent<HTMLAttributes<HTMLDivElement> & Partial<Pick<ScrollAreaContext, "layout">> & Omit<ScrollAreaContext, "layout"> & import("react").RefAttributes<HTMLDivElement>>;
type VariableSizeListExcludedProps = "width" | "height" | "layout" | "itemCount" | "itemSize";
export type ScrollAreaList = Omit<VariableSizeListProps, VariableSizeListExcludedProps>;
export declare const ScrollAreaList: import("react").ForwardRefExoticComponent<ScrollAreaList & import("react").RefAttributes<VariableSizeList<unknown>>>;
type InfiniteLoaderType = typeof InfiniteLoader;
export type ScrollAreaInfinityList = Omit<ComponentPropsWithoutRef<InfiniteLoaderType>, "children" | "itemCount"> & Omit<ScrollAreaList, "onItemsRendered" | "ref">;
export declare function ScrollAreaInfinityList({ isItemLoaded, loadMoreItems, minimumBatchSize, threshold, ...props }: ScrollAreaInfinityList): import("react/jsx-runtime").JSX.Element;
export {};
