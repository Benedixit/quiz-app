/// <reference types="react" />
import { Progress as ArkProgress, type ProgressRootProps } from "@ark-ui/react";
import { type SizeType } from "../utils";
export declare const progressClasses: (props?: ({
    size?: "sm" | "md" | "lg" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export declare const progressTrackClasses: (props?: ({
    size?: "sm" | "md" | "lg" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export declare const progressIndicatorClasses: (props?: ({
    colorScheme?: "error" | "warning" | "primary" | "success" | "secondary" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export type Progress = Omit<ProgressRootProps, "orientation"> & {
    size?: SizeType;
    colorScheme?: "error" | "warning" | "primary" | "success" | "secondary";
};
export declare const Progress: import("react").ForwardRefExoticComponent<Omit<ArkProgress.RootProps, "orientation"> & {
    size?: SizeType;
    colorScheme?: "error" | "warning" | "primary" | "success" | "secondary" | undefined;
} & import("react").RefAttributes<HTMLDivElement>>;
export declare const progressTextClasses: (props?: ({
    size?: "sm" | "md" | "lg" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export type ProgressValue = {
    size: SizeType;
};
export declare function ProgressValue(props: ProgressValue): import("react/jsx-runtime").JSX.Element;
