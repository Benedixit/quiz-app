import * as AccordionPrimitive from "@radix-ui/react-accordion";
import { type ComponentPropsWithoutRef } from "react";
import type { ValueOrFunction } from "../types";
import { type AccordionContext } from "./context";
export declare const accordionClasses: (props?: ({
    size?: "sm" | "md" | "lg" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export type Accordion = ComponentPropsWithoutRef<typeof AccordionPrimitive.Root> & Partial<AccordionContext>;
export declare const Accordion: import("react").ForwardRefExoticComponent<Accordion & import("react").RefAttributes<HTMLDivElement>>;
export type AccordionItem = ComponentPropsWithoutRef<typeof AccordionPrimitive.Item>;
export declare const AccordionItem: import("react").ForwardRefExoticComponent<Omit<AccordionPrimitive.AccordionItemProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("react").RefAttributes<HTMLDivElement>>;
export declare const accordionTriggerAndContentClasses: (props?: ({
    size?: "sm" | "md" | "lg" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export declare const accordionTriggerClasses: (props?: ({
    size?: "sm" | "md" | "lg" | null | undefined;
    variant?: "solid" | "outline" | "ghost" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export declare const accordionTriggerIconClasses: (props?: ({
    size?: "sm" | "md" | "lg" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export type AccordionTrigger = ComponentPropsWithoutRef<typeof AccordionPrimitive.Trigger> & {
    openIcon?: JSX.Element;
    closeIcon?: JSX.Element;
    isUnstyled?: boolean;
    showIcon?: ValueOrFunction;
};
export declare const AccordionTrigger: import("react").ForwardRefExoticComponent<Omit<AccordionPrimitive.AccordionTriggerProps & import("react").RefAttributes<HTMLButtonElement>, "ref"> & {
    openIcon?: JSX.Element | undefined;
    closeIcon?: JSX.Element | undefined;
    isUnstyled?: boolean | undefined;
    showIcon?: ValueOrFunction | undefined;
} & import("react").RefAttributes<HTMLButtonElement>>;
export declare const accordionContentClasses: (props?: ({
    size?: "sm" | "md" | "lg" | null | undefined;
    variant?: "solid" | "outline" | "ghost" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export type AccordionContent = ComponentPropsWithoutRef<typeof AccordionPrimitive.Content> & {
    isUnstyled?: boolean;
};
export declare const AccordionContent: import("react").ForwardRefExoticComponent<Omit<AccordionPrimitive.AccordionContentProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & {
    isUnstyled?: boolean | undefined;
} & import("react").RefAttributes<HTMLDivElement>>;
