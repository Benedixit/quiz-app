import { type OptgroupHTMLAttributes, type OptionHTMLAttributes, type SelectHTMLAttributes } from "react";
import type { ValueOrFunction } from "../types";
import { type SelectContext } from "./context";
export declare const selectClasses: (props?: ({
    size?: "sm" | "md" | "lg" | null | undefined;
    disabled?: boolean | null | undefined;
    readOnly?: boolean | null | undefined;
    invalid?: boolean | null | undefined;
    variant?: "solid" | "outline" | "ghost" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export declare const triggerIconClasses: (props?: ({
    size?: "sm" | "md" | "lg" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export type Select = Omit<SelectHTMLAttributes<HTMLSelectElement>, "size" | "placeholder"> & {
    variant?: "solid" | "outline" | "ghost";
    placeholder?: string;
    isUnstyled?: boolean;
    isDisabled?: ValueOrFunction;
    isInvalid?: ValueOrFunction;
    isLoading?: ValueOrFunction;
    isReadOnly?: ValueOrFunction;
    isRequired?: ValueOrFunction;
} & Partial<SelectContext>;
export declare const Select: import("react").ForwardRefExoticComponent<Omit<SelectHTMLAttributes<HTMLSelectElement>, "size" | "placeholder"> & {
    variant?: "solid" | "outline" | "ghost" | undefined;
    placeholder?: string | undefined;
    isUnstyled?: boolean | undefined;
    isDisabled?: ValueOrFunction | undefined;
    isInvalid?: ValueOrFunction | undefined;
    isLoading?: ValueOrFunction | undefined;
    isReadOnly?: ValueOrFunction | undefined;
    isRequired?: ValueOrFunction | undefined;
} & Partial<SelectContext> & import("react").RefAttributes<HTMLSelectElement>>;
export declare const selectItemClasses: (props?: ({
    size?: "sm" | "md" | "lg" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export type SelectItem = OptionHTMLAttributes<HTMLOptionElement>;
export declare const SelectItem: import("react").ForwardRefExoticComponent<SelectItem & import("react").RefAttributes<HTMLOptionElement>>;
export declare const selectItemGroupClasses: (props?: ({
    size?: "sm" | "md" | "lg" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export type SelectItemGroup = OptgroupHTMLAttributes<HTMLOptGroupElement>;
export declare const SelectItemGroup: import("react").ForwardRefExoticComponent<SelectItemGroup & import("react").RefAttributes<HTMLOptGroupElement>>;
