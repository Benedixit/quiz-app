import { type HTMLAttributes } from "react";
import { type SizeType } from "../utils";
export declare const badgeClasses: (props?: ({
    size?: "sm" | "md" | "lg" | null | undefined;
    status?: "primary" | "secondary" | "success" | "warning" | "error" | "info" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export type Badge = Omit<HTMLAttributes<HTMLDivElement>, "children"> & {
    size?: SizeType;
    status?: "primary" | "secondary" | "success" | "warning" | "error" | "info";
};
export declare const Badge: import("react").ForwardRefExoticComponent<Omit<HTMLAttributes<HTMLDivElement>, "children"> & {
    size?: SizeType;
    status?: "primary" | "secondary" | "success" | "warning" | "error" | "info" | undefined;
} & import("react").RefAttributes<HTMLDivElement>>;
