import * as DialogPrimitive from "@radix-ui/react-dialog";
import { type ComponentPropsWithoutRef } from "react";
import { Button } from "../button";
import { type DrawerContext } from "./context";
export type Drawer = ComponentPropsWithoutRef<typeof DialogPrimitive.Root> & Partial<DrawerContext>;
export declare function Drawer({ children, size, side, ...props }: Drawer): import("react/jsx-runtime").JSX.Element;
export type DrawerOverlay = ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>;
export declare const DrawerOverlay: import("react").ForwardRefExoticComponent<Omit<DialogPrimitive.DialogOverlayProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("react").RefAttributes<HTMLDivElement>>;
export declare const drawerContentClasses: (props?: ({
    size?: "sm" | "md" | "lg" | "full" | null | undefined;
    side?: "right" | "left" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export type DrawerContent = ComponentPropsWithoutRef<typeof DialogPrimitive.Content>;
export declare const DrawerContent: import("react").ForwardRefExoticComponent<Omit<DialogPrimitive.DialogContentProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & import("react").RefAttributes<HTMLDivElement>>;
export declare const drawerTitleClasses: (props?: ({
    size?: "sm" | "md" | "lg" | "full" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export type DrawerTitle = ComponentPropsWithoutRef<typeof DialogPrimitive.Title>;
export declare const DrawerTitle: import("react").ForwardRefExoticComponent<Omit<DialogPrimitive.DialogTitleProps & import("react").RefAttributes<HTMLHeadingElement>, "ref"> & import("react").RefAttributes<HTMLHeadingElement>>;
export declare const DrawerDescription: import("react").ForwardRefExoticComponent<DialogPrimitive.DialogDescriptionProps & import("react").RefAttributes<HTMLParagraphElement>>;
export type DrawerClose = ComponentPropsWithoutRef<typeof DialogPrimitive.Close> & Button;
export declare const DrawerClose: import("react").ForwardRefExoticComponent<Omit<DialogPrimitive.DialogCloseProps & import("react").RefAttributes<HTMLButtonElement>, "ref"> & import("react").ButtonHTMLAttributes<HTMLButtonElement> & {
    leftIcon?: JSX.Element | undefined;
    rightIcon?: JSX.Element | undefined;
    loadingText?: string | undefined;
    isUnstyled?: boolean | undefined;
    colorScheme?: "primary" | "secondary" | "error" | "success" | undefined;
    variant?: "solid" | "outline" | "ghost" | undefined;
    size?: ("sm" | "md" | "lg" | "icon" | "fab") | undefined;
    isLoading?: import("..").ValueOrFunction | undefined;
    isActive?: import("..").ValueOrFunction | undefined;
    isDisabled?: import("..").ValueOrFunction | undefined;
    isHidden?: import("..").ValueOrFunction | undefined;
} & import("react").RefAttributes<HTMLButtonElement>>;
