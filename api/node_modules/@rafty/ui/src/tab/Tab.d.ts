import * as TabsPrimitive from "@radix-ui/react-tabs";
import { type ComponentPropsWithoutRef } from "react";
import { type TabContext } from "./context";
export type Tab = ComponentPropsWithoutRef<typeof TabsPrimitive.Root> & Partial<TabContext> & {
    isUnstyled?: boolean;
};
export declare const Tab: import("react").ForwardRefExoticComponent<Omit<TabsPrimitive.TabsProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & Partial<TabContext> & {
    isUnstyled?: boolean | undefined;
} & import("react").RefAttributes<HTMLDivElement>>;
export type TabList = ComponentPropsWithoutRef<typeof TabsPrimitive.List> & {
    isUnstyled?: boolean;
};
export declare const TabList: import("react").ForwardRefExoticComponent<Omit<TabsPrimitive.TabsListProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & {
    isUnstyled?: boolean | undefined;
} & import("react").RefAttributes<HTMLDivElement>>;
export declare const tabTriggerClasses: (props?: ({
    size?: "sm" | "md" | "lg" | null | undefined;
    variant?: "line" | "enclosed" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export type TabTrigger = ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger> & {
    isUnstyled?: boolean;
};
export declare const TabTrigger: import("react").ForwardRefExoticComponent<Omit<TabsPrimitive.TabsTriggerProps & import("react").RefAttributes<HTMLButtonElement>, "ref"> & {
    isUnstyled?: boolean | undefined;
} & import("react").RefAttributes<HTMLButtonElement>>;
export declare const tabContentClasses: (props?: ({
    size?: "sm" | "md" | "lg" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export type TabContent = ComponentPropsWithoutRef<typeof TabsPrimitive.Content> & {
    isUnstyled?: boolean;
};
export declare const TabContent: import("react").ForwardRefExoticComponent<Omit<TabsPrimitive.TabsContentProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & {
    isUnstyled?: boolean | undefined;
} & import("react").RefAttributes<HTMLDivElement>>;
