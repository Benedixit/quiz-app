import * as AlertDialogPrimitive from "@radix-ui/react-alert-dialog";
import { type ComponentPropsWithoutRef, type HTMLAttributes } from "react";
import { Button } from "../button";
import { type AlertDialogContext } from "./context";
export type AlertDialog = ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Root> & Partial<AlertDialogContext>;
export declare function AlertDialog({ size, isUnstyled, ...props }: AlertDialog): import("react/jsx-runtime").JSX.Element;
export type AlertDialogTrigger = ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Trigger> & Button;
export declare const AlertDialogTrigger: import("react").ForwardRefExoticComponent<Omit<AlertDialogPrimitive.AlertDialogTriggerProps & import("react").RefAttributes<HTMLButtonElement>, "ref"> & import("react").ButtonHTMLAttributes<HTMLButtonElement> & {
    leftIcon?: JSX.Element | undefined;
    rightIcon?: JSX.Element | undefined;
    loadingText?: string | undefined;
    isUnstyled?: boolean | undefined;
    colorScheme?: "primary" | "secondary" | "error" | "success" | undefined;
    variant?: "solid" | "outline" | "ghost" | undefined;
    size?: ("sm" | "md" | "lg" | "icon" | "fab") | undefined;
    isLoading?: import("..").ValueOrFunction | undefined;
    isActive?: import("..").ValueOrFunction | undefined;
    isDisabled?: import("..").ValueOrFunction | undefined;
    isHidden?: import("..").ValueOrFunction | undefined;
} & import("react").RefAttributes<HTMLButtonElement>>;
export declare const alertDialogOverlayClasses = "fixed inset-0 z-50 bg-white/40 backdrop-blur-sm dark:bg-black/40 data-[state=open]:animate-overlayShow";
export type AlertDialogOverlay = ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay> & {
    isUnstyled?: boolean;
};
export declare const AlertDialogOverlay: import("react").ForwardRefExoticComponent<Omit<AlertDialogPrimitive.AlertDialogOverlayProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & {
    isUnstyled?: boolean | undefined;
} & import("react").RefAttributes<HTMLDivElement>>;
export declare const alertDialogContentClasses: (props?: ({
    size?: "sm" | "md" | "lg" | "xl" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export type AlertDialogContent = ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content> & {
    isUnstyled?: boolean;
};
export declare const AlertDialogContent: import("react").ForwardRefExoticComponent<Omit<AlertDialogPrimitive.AlertDialogContentProps & import("react").RefAttributes<HTMLDivElement>, "ref"> & {
    isUnstyled?: boolean | undefined;
} & import("react").RefAttributes<HTMLDivElement>>;
export declare const alertDialogHeaderAndFooterClasses: (props?: ({
    size?: "sm" | "md" | "lg" | "xl" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export type AlertDialogHeader = HTMLAttributes<HTMLElement> & {
    isUnstyled?: boolean;
};
export declare const AlertDialogHeader: import("react").ForwardRefExoticComponent<HTMLAttributes<HTMLElement> & {
    isUnstyled?: boolean | undefined;
} & import("react").RefAttributes<HTMLElement>>;
export type AlertDialogFooter = HTMLAttributes<HTMLElement> & {
    isUnstyled?: boolean;
};
export declare const AlertDialogFooter: import("react").ForwardRefExoticComponent<HTMLAttributes<HTMLElement> & {
    isUnstyled?: boolean | undefined;
} & import("react").RefAttributes<HTMLElement>>;
export declare const alertDialogTitleClasses: (props?: ({
    size?: "sm" | "md" | "lg" | "xl" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export type AlertDialogTitle = ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title> & {
    isUnstyled?: boolean;
};
export declare const AlertDialogTitle: import("react").ForwardRefExoticComponent<Omit<AlertDialogPrimitive.AlertDialogTitleProps & import("react").RefAttributes<HTMLHeadingElement>, "ref"> & {
    isUnstyled?: boolean | undefined;
} & import("react").RefAttributes<HTMLHeadingElement>>;
export declare const alertDialogDescriptionClasses: (props?: ({
    size?: "sm" | "md" | "lg" | "xl" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export type AlertDialogDescription = ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description> & {
    isUnstyled?: boolean;
};
export declare const AlertDialogDescription: import("react").ForwardRefExoticComponent<Omit<AlertDialogPrimitive.AlertDialogDescriptionProps & import("react").RefAttributes<HTMLParagraphElement>, "ref"> & {
    isUnstyled?: boolean | undefined;
} & import("react").RefAttributes<HTMLParagraphElement>>;
export declare const AlertDialogAction: import("react").ForwardRefExoticComponent<AlertDialogPrimitive.AlertDialogActionProps & import("react").RefAttributes<HTMLButtonElement>>;
export declare const AlertDialogCancel: import("react").ForwardRefExoticComponent<AlertDialogPrimitive.AlertDialogCancelProps & import("react").RefAttributes<HTMLButtonElement>>;
