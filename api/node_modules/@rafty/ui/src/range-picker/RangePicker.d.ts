/// <reference types="react" />
import { DatePicker as ArkDatePicker, type DatePickerRootProps } from "@ark-ui/react";
import type { ValueOrFunction } from "../types";
import { type SizeType } from "../utils";
type ValueType = [string] | [string, string] | undefined;
export type RangePicker = Omit<DatePickerRootProps, "value" | "onValueChange" | "defaultValue"> & {
    placeholder?: {
        from?: string;
        to?: string;
    };
    value?: ValueType;
    onValueChange?: (value?: ValueType) => void;
    defaultValue?: ValueType;
    size?: SizeType;
    isDisabled?: ValueOrFunction;
    isInvalid?: ValueOrFunction;
    isLoading?: ValueOrFunction;
    isReadOnly?: ValueOrFunction;
};
export declare const RangePicker: import("react").ForwardRefExoticComponent<Omit<ArkDatePicker.RootProps, "value" | "onValueChange" | "defaultValue"> & {
    placeholder?: {
        from?: string | undefined;
        to?: string | undefined;
    } | undefined;
    value?: ValueType;
    onValueChange?: ((value?: ValueType) => void) | undefined;
    defaultValue?: ValueType;
    size?: SizeType;
    isDisabled?: ValueOrFunction | undefined;
    isInvalid?: ValueOrFunction | undefined;
    isLoading?: ValueOrFunction | undefined;
    isReadOnly?: ValueOrFunction | undefined;
} & import("react").RefAttributes<HTMLDivElement>>;
export {};
