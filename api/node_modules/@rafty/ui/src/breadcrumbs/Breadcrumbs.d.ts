import { type HTMLAttributes } from "react";
import { type BreadcrumbsContext } from "./context";
export declare const breadcrumbsClasses: (props?: ({
    size?: "sm" | "md" | "lg" | null | undefined;
    defaultVariants?: "size" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export type Breadcrumbs = HTMLAttributes<HTMLElement> & Partial<BreadcrumbsContext>;
export declare const Breadcrumbs: import("react").ForwardRefExoticComponent<HTMLAttributes<HTMLElement> & Partial<BreadcrumbsContext> & import("react").RefAttributes<HTMLElement>>;
export declare const breadcrumbsDividerClasses: (props?: ({
    size?: "sm" | "md" | "lg" | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export type BreadcrumbDivider = HTMLAttributes<HTMLLIElement>;
export declare const BreadcrumbDivider: import("react").ForwardRefExoticComponent<BreadcrumbDivider & import("react").RefAttributes<HTMLLIElement>>;
export declare const breadcrumbsItemClasses: (props?: ({
    size?: "sm" | "md" | "lg" | null | undefined;
    active?: boolean | null | undefined;
} & import("class-variance-authority/dist/types").ClassProp) | undefined) => string;
export type BreadcrumbItem = HTMLAttributes<HTMLLIElement> & {
    isUnstyled?: boolean;
    isActive?: boolean;
};
export declare const BreadcrumbItem: import("react").ForwardRefExoticComponent<HTMLAttributes<HTMLLIElement> & {
    isUnstyled?: boolean | undefined;
    isActive?: boolean | undefined;
} & import("react").RefAttributes<HTMLLIElement>>;
